service: () -> {
    createUser: (record {age:nat8; nik:text; nip:text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; role:text; birthPlace:text; email:text; district:text; address:text; gender:text; specialization:text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}) -> (variant {Ok:record {id:principal; age:nat8; nik:opt text; nip:opt text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; createdAt:nat64; role:text; birthPlace:text; email:text; district:text; updatedAt:nat64; isVerified:bool; address:text; gender:text; specialization:opt text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    deleteUser: (principal) -> (variant {Ok:record {id:principal; age:nat8; nik:opt text; nip:opt text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; createdAt:nat64; role:text; birthPlace:text; email:text; district:text; updatedAt:nat64; isVerified:bool; address:text; gender:text; specialization:opt text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    getAllUsers: () -> (variant {Ok:vec record {id:principal; age:nat8; nik:opt text; nip:opt text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; createdAt:nat64; role:text; birthPlace:text; email:text; district:text; updatedAt:nat64; isVerified:bool; address:text; gender:text; specialization:opt text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    getMyProfile: () -> (variant {Ok:record {id:principal; age:nat8; nik:opt text; nip:opt text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; createdAt:nat64; role:text; birthPlace:text; email:text; district:text; updatedAt:nat64; isVerified:bool; address:text; gender:text; specialization:opt text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    isCallerRegistered: () -> (bool) query;
    verifyUser: (principal) -> (variant {Ok:record {id:principal; age:nat8; nik:opt text; nip:opt text; bloodType:text; country:text; province:text; birthDate:nat64; city:text; postalCode:text; name:text; createdAt:nat64; role:text; birthPlace:text; email:text; district:text; updatedAt:nat64; isVerified:bool; address:text; gender:text; specialization:opt text; phone:text; religion:text; subDistrict:text; bloodRhesus:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
}
